# https://circleci.com/docs/2.0/configuration-reference/
version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: alpine/helm:3.1.2
    steps:
      - checkout
      - run:
          command: mkdir /tmp/releases
      - run:
          name: Package all the charts
          command: |
            for chart in $(find ~/project/src -type d -mindepth 1 -maxdepth 1)
              do helm package $chart -d /tmp/releases
            done
      - run:
          command: cp /tmp/releases/*.tgz releases
      - run:
          name: Re-index the repository
          command: helm repo index ~/project --url https://mkorejo.github.io/helm_charts
          working_directory: /tmp
      - save_cache:
          paths:
            - /tmp/index.yaml
          key: index-{{ .Revision }}
      - save_cache:
          paths:
            - /tmp/releases
          key: releases-{{ .Revision }}

  upload:
    docker:
      - image: circleci/golang:1.14.1
    steps:
      - checkout
      - restore_cache:
          key: index-{{ .Revision }}
      - restore_cache:
          key: releases-{{ .Revision }}
      - run:
          name: Stage new artifacts
          command: |
            cp /tmp/index.yaml .
            cp /tmp/releases/*.tgz releases
      - run:
          name: Commit and push
          command: |
            git config --global user.email "infra-apps-uploader@blackhole.net"
            git config --global user.name "infra-apps Uploader"
            git add index.yaml
            git add releases/*.tgz
            git commit -m "CircleCI Helm chart upload"
            git push
    # - run:
    #     name: Clone the Helm charts repository :-/
    #     command: |
    #       mkdir ~/.ssh
    #       echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    #       git clone git@github.com:mkorejo/charts_repo.git /tmp/charts_repo

workflows:
  version: 2
  build_and_upload:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - upload:
          requires:
            - build